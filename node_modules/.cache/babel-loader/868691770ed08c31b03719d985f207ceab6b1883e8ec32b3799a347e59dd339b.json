{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nawaaz\\\\MentorBaba\\\\Internship Projects\\\\React - Python Project\\\\room-booking\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [selectedRoom, setSelectedRoom] = useState('');\n  const [userName, setUserName] = useState('');\n  const [bookingSuccess, setBookingSuccess] = useState(false);\n  const [bookedRoomId, setBookedRoomId] = useState(null);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/rooms').then(response => setRooms(response.data)).catch(error => console.error('Error fetching rooms:', error));\n  }, []);\n  const handleBookRoom = () => {\n    if (selectedRoom && userName) {\n      axios.post('http://localhost:5000/api/bookings', {\n        room_id: selectedRoom,\n        user_name: userName\n      }).then(response => {\n        const roomId = response.data.room_id;\n        setBookedRoomId(roomId);\n        setBookingSuccess(true);\n        console.log(response.data.message);\n        // You can add additional logic here, e.g., updating state\n      }).catch(error => {\n        console.error('Error booking room:', error);\n        setBookingSuccess(false);\n      });\n    } else {\n      console.error('Please select a room and provide a user name');\n      setBookingSuccess(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Room Booking App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rooms\",\n        children: \"Select a room:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"rooms\",\n        onChange: e => setSelectedRoom(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), rooms.map(room => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: room[0],\n          children: room[1]\n        }, room[0], false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"userName\",\n        children: \"Your Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"userName\",\n        onChange: e => setUserName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBookRoom,\n      children: \"Book Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), bookingSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Room successfully booked! Room ID: \", bookedRoomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"va8EpOhAfQ5VQtx96FhQwJLArzA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","rooms","setRooms","selectedRoom","setSelectedRoom","userName","setUserName","bookingSuccess","setBookingSuccess","bookedRoomId","setBookedRoomId","get","then","response","data","catch","error","console","handleBookRoom","post","room_id","user_name","roomId","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","e","target","value","map","room","type","onClick","_c","$RefreshReg$"],"sources":["D:/Nawaaz/MentorBaba/Internship Projects/React - Python Project/room-booking/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [rooms, setRooms] = useState([]);\n  const [selectedRoom, setSelectedRoom] = useState('');\n  const [userName, setUserName] = useState('');\n  const [bookingSuccess, setBookingSuccess] = useState(false);\n  const [bookedRoomId, setBookedRoomId] = useState(null);\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/rooms')\n      .then(response => setRooms(response.data))\n      .catch(error => console.error('Error fetching rooms:', error));\n  }, []);\n\n  const handleBookRoom = () => {\n    if (selectedRoom && userName) {\n      axios.post('http://localhost:5000/api/bookings', {\n        room_id: selectedRoom,\n        user_name: userName,\n      })\n        .then(response => {\n          const roomId = response.data.room_id;\n          setBookedRoomId(roomId);\n          setBookingSuccess(true);\n          console.log(response.data.message);\n          // You can add additional logic here, e.g., updating state\n        })\n        .catch(error => {\n          console.error('Error booking room:', error);\n          setBookingSuccess(false);\n        });\n    } else {\n      console.error('Please select a room and provide a user name');\n      setBookingSuccess(false);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Room Booking App</h1>\n      <div>\n        <label htmlFor=\"rooms\">Select a room:</label>\n        <select id=\"rooms\" onChange={(e) => setSelectedRoom(e.target.value)}>\n          <option value=\"\">Select</option>\n          {rooms.map(room => (\n            <option key={room[0]} value={room[0]}>\n              {room[1]}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"userName\">Your Name:</label>\n        <input type=\"text\" id=\"userName\" onChange={(e) => setUserName(e.target.value)} />\n      </div>\n      <button onClick={handleBookRoom}>Book Room</button>\n      {bookingSuccess && (\n        <p>Room successfully booked! Room ID: {bookedRoomId}</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACe,GAAG,CAAC,iCAAiC,CAAC,CACzCC,IAAI,CAACC,QAAQ,IAAIX,QAAQ,CAACW,QAAQ,CAACC,IAAI,CAAC,CAAC,CACzCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIf,YAAY,IAAIE,QAAQ,EAAE;MAC5BT,KAAK,CAACuB,IAAI,CAAC,oCAAoC,EAAE;QAC/CC,OAAO,EAAEjB,YAAY;QACrBkB,SAAS,EAAEhB;MACb,CAAC,CAAC,CACCO,IAAI,CAACC,QAAQ,IAAI;QAChB,MAAMS,MAAM,GAAGT,QAAQ,CAACC,IAAI,CAACM,OAAO;QACpCV,eAAe,CAACY,MAAM,CAAC;QACvBd,iBAAiB,CAAC,IAAI,CAAC;QACvBS,OAAO,CAACM,GAAG,CAACV,QAAQ,CAACC,IAAI,CAACU,OAAO,CAAC;QAClC;MACF,CAAC,CAAC,CACDT,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3CR,iBAAiB,CAAC,KAAK,CAAC;MAC1B,CAAC,CAAC;IACN,CAAC,MAAM;MACLS,OAAO,CAACD,KAAK,CAAC,8CAA8C,CAAC;MAC7DR,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC;EAED,oBACEV,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB/B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAOgC,OAAO,EAAC,OAAO;QAAAL,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7C/B,OAAA;QAAQiC,EAAE,EAAC,OAAO;QAACC,QAAQ,EAAGC,CAAC,IAAK7B,eAAe,CAAC6B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAAAV,QAAA,gBAClE3B,OAAA;UAAQqC,KAAK,EAAC,EAAE;UAAAV,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC/B5B,KAAK,CAACmC,GAAG,CAACC,IAAI,iBACbvC,OAAA;UAAsBqC,KAAK,EAAEE,IAAI,CAAC,CAAC,CAAE;UAAAZ,QAAA,EAClCY,IAAI,CAAC,CAAC;QAAC,GADGA,IAAI,CAAC,CAAC,CAAC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN/B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAOgC,OAAO,EAAC,UAAU;QAAAL,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5C/B,OAAA;QAAOwC,IAAI,EAAC,MAAM;QAACP,EAAE,EAAC,UAAU;QAACC,QAAQ,EAAGC,CAAC,IAAK3B,WAAW,CAAC2B,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9E,CAAC,eACN/B,OAAA;MAAQyC,OAAO,EAAErB,cAAe;MAAAO,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAClDtB,cAAc,iBACbT,OAAA;MAAA2B,QAAA,GAAG,qCAAmC,EAAChB,YAAY;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACxD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC7B,EAAA,CA5DQD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AA8DZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}